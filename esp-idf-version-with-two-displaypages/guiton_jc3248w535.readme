Guiton display was purchased at: https://www.aliexpress.com/item/1005007566315926.html

Connector for power (to avoid USB-C plug on the back) was purchased at (4P): https://www.aliexpress.com/item/1005004587466608.html

EV Smart Charging integration for Home Assistant: https://github.com/jonasbkarlsson/ev_smart_charging/


Template sensors to be created in order to utilize the Guiton display with EV charge indicator (done via ChatGPT, could probably be created better by more experienced people):

sensor.ev_smart_charge_stop_time_index

{% set dt_str = state_attr('sensor.ev_smart_charging_charging', 'charging_stop_time') %}
          {% if dt_str %}
            {% set dt = as_datetime(dt_str) %}
            {% if dt %}
              {% set now = now().replace(hour=0, minute=0, second=0, microsecond=0) %}
              {% set tomorrow = now + timedelta(days=1) %}
              {% if dt.date() == now.date() %}
                {{ ((dt - now).total_seconds() / 900) | int }}
              {% elif dt.date() == tomorrow.date() %}
                {{ ((dt - now).total_seconds() / 900) | int }}
              {% else %}
                -1
              {% endif %}
            {% else %}
              -1
            {% endif %}
          {% else %}
            -1
          {% endif %}


sensor.ev_smart_charge_start_time_index

{% set dt_str = state_attr('sensor.ev_smart_charging_charging', 'charging_start_time') %}
          {% if dt_str %}
            {% set dt = as_datetime(dt_str) %}
            {% if dt %}
              {% set now = now().replace(hour=0, minute=0, second=0, microsecond=0) %}
              {% set tomorrow = now + timedelta(days=1) %}
              {% if dt.date() == now.date() %}
                {{ ((dt - now).total_seconds() / 900) | int }}
              {% elif dt.date() == tomorrow.date() %}
                {{ ((dt - now).total_seconds() / 900) | int }}
              {% else %}
                -1
              {% endif %}
            {% else %}
              -1
            {% endif %}
          {% else %}
            -1
          {% endif %}

I have this in configuration.yaml (can probably be added as template sensor via GUI as well)

  - sensor:
    - name: energy_max_price
      unique_id: energy_max_price
      state: "{{ states.sensor.energi_data_service.attributes.today_max.price }}"





My automation to update thresholds for summer/winter tarriffs - could probably be done better, as this one only checks once per day:

alias: Skift El Tariffer
description: ""
triggers:
  - at: "00:00:00"
    trigger: time
conditions: []
actions:
  - choose:
      - conditions:
          - condition: state
            entity_id: binary_sensor.energysummertariffs
            state: "on"
        sequence:
          - metadata: {}
            data:
              value: "0.5"
            target:
              entity_id:
                - number.jc3248w535_02_very_cheap
            action: number.set_value
          - metadata: {}
            data:
              value: "0.85"
            target:
              entity_id:
                - number.jc3248w535_04_cheap
            action: number.set_value
          - metadata: {}
            data:
              value: "1.45"
            target:
              entity_id:
                - number.jc3248w535_06_normal
            action: number.set_value
          - metadata: {}
            data:
              value: "1.8"
            target:
              entity_id:
                - number.jc3248w535_08_expensive
            action: number.set_value
          - metadata: {}
            data:
              value: "2.4"
            target:
              entity_id:
                - number.jc3248w535_10_very_expensive
            action: number.set_value
          - metadata: {}
            data:
              value: "3.0"
            target:
              entity_id:
                - number.jc3248w535_12_extremely_expensive
            action: number.set_value
      - conditions:
          - condition: state
            entity_id: binary_sensor.energysummertariffs
            state: "off"
        sequence:
          - metadata: {}
            data:
              value: "0.5"
            target:
              entity_id:
                - number.jc3248w535_02_very_cheap
            action: number.set_value
          - metadata: {}
            data:
              value: "1.0"
            action: number.set_value
            target:
              entity_id: number.jc3248w535_04_cheap
          - metadata: {}
            data:
              value: "1.6"
            action: number.set_value
            target:
              entity_id: number.jc3248w535_06_normal
          - metadata: {}
            data:
              value: "2.2"
            action: number.set_value
            target:
              entity_id: number.jc3248w535_08_expensive
          - metadata: {}
            data:
              value: "3.0"
            action: number.set_value
            target:
              entity_id: number.jc3248w535_10_very_expensive
          - metadata: {}
            data:
              value: "4"
            action: number.set_value
            target:
              entity_id: number.jc3248w535_12_extremely_expensive
mode: single


